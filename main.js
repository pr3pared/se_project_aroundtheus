!function(){"use strict";class e{constructor(e,t,s){this.name=e.name,this.link=e.link,this.alt=e.alt,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".elements__button"),this._deleteButton=this._cardElement.querySelector(".elements__button_delete"),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick({name:this.name,link:this.link})}))}_handleLikeIcon(){this._likeButton.classList.toggle("elements__button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".elements__card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".elements__title"),this._cardImageEl=this._cardElement.querySelector(".elements__card-image"),this._cardTitle.textContent=this.name,this._cardImageEl.src=this.link,this._cardImageEl.alt=this.alt,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}_handleSubmitButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._handleSubmitButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetForm(){this._formElement.reset()}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._popupCloseButton=this._popupElement.querySelector(".popup__close"),this._handleClickClose=this._handleClickClose.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.remove("popup_hidden"),document.addEventListener("click",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.add("popup_hidden"),document.removeEventListener("click",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleClickClose(e){e.target.classList.contains("popup")&&this.close()}setEventListeners(){this._popupCloseButton.addEventListener("click",(()=>this.close()))}}var n=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t,this.inputs=this._popupForm.querySelectorAll("input")}_getInputValues(){const e={};return this.inputs.forEach((t=>{e[t.name]=t.value})),e}_submitForm(e){e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>this._submitForm(e)))}};const i={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},o=document.querySelector(".profile__edit-button"),r=document.querySelector(".profile__add-button"),l=document.querySelector(".elements__list"),a=document.forms["profile-form"],p=document.forms["card-form"],c=a.querySelector(".popup__input_type_name"),u=a.querySelector(".popup__input_type_description"),_=(p.querySelector(".popup__input_type_place"),p.querySelector(".popup__input_type_image"),new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:s}=e;this._profileName=document.querySelector(t),this._profileDescription=document.querySelector(s)}getUserInfo(){return{name:this._profileName.textContent,description:this._profileDescription.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._profileName.textContent=t,this._profileDescription.textContent=s}}({profileNameSelector:".profile__name",profileDescriptionSelector:".profile__description"})),m=new class extends s{constructor(e){super({popupSelector:e}),this._imageElement=this._popupElement.querySelector(".popup-photo__image"),this._captionElement=this._popupElement.querySelector(".popup-photo__title")}open(e){let{name:t,link:s}=e;this._imageElement.src=s,this._imageElement.alt=t,this._captionElement.textContent=t,super.open()}}(".popup-photo");function d(t){return new e(t,"#card-template",(e=>m.open(e))).getTemplate()}m.setEventListeners();const h=new n(".popup-card",(e=>{const t=d({name:e["first-input"],link:e["second-input"],alt:e["first-input"]});v.addItem(t,"prepend"),h.close(),S.resetForm(),S.disableSubmitButton()}));h.setEventListeners();const E=new n(".popup-profile",(e=>{_.setUserInfo({name:e["first-input"],description:e["second-input"]}),E.close()}));E.setEventListeners(),o.addEventListener("click",(()=>{const{name:e,description:t}=_.getUserInfo();c.value=e,u.value=t,E.open()})),r.addEventListener("click",(()=>{h.open()}));const v=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._elementsList=t}renderItems(){this._items.forEach((e=>{this._renderer(e,"append")}))}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"appendChild";this._elementsList[t]&&this._elementsList[t](e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg",alt:"Yosemite"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg",alt:"Lake Louise"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg",alt:"Bald Mountains"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg",alt:"Latemar"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg",alt:"Vanoise"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg",alt:"Lago"}],renderer:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";const s=d(e);v.addItem(s,t)}},l);v.renderItems();const S=new t(i,p);S.enableValidation(),new t(i,a).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,